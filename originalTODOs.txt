DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (14, 8) * TODO: words and frequencies stored in a data structure of whatever type you want.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (35, 8) * TODO: constructor based on a filename.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (45, 8) * TODO: constructor for filename and a pattern specifying characters
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (57, 8) * TODO: constructor using a configuration object.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (67, 8) * TODO: constructor using a configuration object and a pattern
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (80, 8) * TODO: set or reset the configuration object.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (89, 8) * TODO: Initialise based on a configuration object.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (100, 8) * TODO: initialise based on the filename to read.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (115, 8) * TODO: initialise based on the filename to read and a pattern
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (132, 8) * TODO: initialise based on a configuration and a pattern specifying characters
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (145, 8) * TODO: gets the pattern showing the characters that are not allowed in words.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (154, 8) * TODO: sets the pattern of characters that are not allowed in words.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (163, 8) * TODO: readDocument() calls the helper class's method to read a file.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (175, 8) * TODO: getStatsNormalisedWords() returns the statistics of normalised words
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (186, 8) * TODO: getStatsNormalisedWords() returns the statistics of normalised words
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (204, 8) * TODO: printStatsNormalisedWords() prints the statistics of normalised words
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocument.java] (212, 8) * TODO: printStatsNormalisedWords() prints the statistics of normalised wordsDocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/SortingOrder.java] (12, 8) * TODO: constructor.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/SortingOrder.java] (20, 8) * TODO: isReversed() checks whether the named sort order is reversedDocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/InformationDocument.java] (36, 8) * TODO: return a short-list of the first N most frequent words (or last N if reversed)
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/InformationDocument.java] (53, 8) * TODO: return a short-list of the first N most frequent words (or last N if reversed)
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/InformationDocument.java] (75, 8) * TODO: return a short-list of the first N most frequent words (or last N if reversed).DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Runner.java] (92, 8) * TODO: the number of command-line arguments must be acceptable.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Runner.java] (129, 8) * TODO: complete filesOK: checks all provided files are okDocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (14, 8) * TODO: Store the set of vowels [a, e, i, o, u] ("y" is not considered a vowel.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (24, 8) * TODO: Create constructor.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (34, 8) * TODO: normalise means a word is entirely lowercase and
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (45, 8) * TODO: getter for the normalised form of the word.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (55, 8) * TODO: getter for the current frequency of the word.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (62, 8) * TODO: increment the frequency count by one
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (67, 8) * TODO: gets a String of this object's data (frequency and normalised word-form)
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (78, 8) * TODO: gets a String of this object's data (frequency and normalised word-form)
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyWord.java] (91, 8) * TODO: A FrequencyWord knows how to compare itself with another FrequencyWord.DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyReaderConfig.java] (28, 8) * TODO: get the verbosity for the current configuration.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyReaderConfig.java] (37, 8) * TODO: set the verbosity for the current configuration.DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentReader.java] (31, 8) * TODO: Reads a document using default settings for those not provided.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentReader.java] (48, 8) * TODO: reads a document using the default set of non-word characters.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentReader.java] (59, 9) /** TODO read the file specified in the configuration and obey theDocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (16, 8) * TODO: default constructor is the parent's constructor.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (21, 8) * TODO: constructor based on a filename.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (33, 8) * TODO: constructor for filename and a pattern specifying characters
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (48, 8) * TODO: constructor using a configuration object.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (57, 8) * TODO: constructor using a configuration object and a pattern
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (69, 8) * TODO: Initialise based on a filename.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/FrequencyDocumentPG.java] (85, 8) * TODO: constructor using a filename and a pattern specifying charactersDocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/ExampleRunner.java] (96, 8) * TODO: the number of command-line arguments must be acceptable.
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/ExampleRunner.java] (133, 8) * TODO: complete filesOK: checks all provided files are ok.DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/Normaliser.java] (7, 8) * TODO: normalise: returns a standardised copy of a String.DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/TrollSpeaker.java] (7, 8) * TODO: translateIntoTroll: translates a word into trollishDocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/BasicTextFileReader.java] (13, 8) * TODO: readFile: read all the words of a file.DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/AdvancedTextFileReader.java] (17, 8) * TODO: advancedReadFile: read all the words of a file between two specific lines.DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/Verbosity.java] (12, 8) * TODO: constructor
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/Verbosity.java] (20, 8) * TODO: getVerbosityLevel():
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/Verbosity.java] (28, 8) * TODO: isVerbose():DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/a3algorithms/VowelChecker.java] (11, 8) * TODO: isVowel() checks if a String is one of the five English vowels (exclude "y")DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Verbosity.java] (12, 8) * TODO: constructor
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Verbosity.java] (20, 8) * TODO: getVerbosityLevel():
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Verbosity.java] (28, 8) * TODO: isVerbose():DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Translation.java] (10, 8) // TODO: put the code for translating troll directly inside the overriden method
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Translation.java] (12, 8) /* TODO: translate into British doggie speak. Dogs from different countries
DocumentImpl[file://C:/_vm_shared/Inf1B/Assignment3Part2FullModel/src/literatureStats/Translation.java] (88, 8) * TODO: Translates the word component of a {@link FrequencyWord}.